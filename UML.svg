<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="801px" height="1134px" viewBox="-0.5 -0.5 801 1134" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-01-24T03:13:18.513Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36 OPR/73.0.3856.344&quot; etag=&quot;hn5Rnb9SvoFXfN6A9c1y&quot; version=&quot;14.1.2&quot; type=&quot;google&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;7V3dc5u4Fv9rPNM+5A4f/nyMkzbbvelO2vRut/vikY1iswHkBdmx+7B/+z0CYUASIBLTeF1mMgk6HAmhc3T0Ox92evaVv7sJ0Xr1kTjY61mGs+vZ1z3LsmzDhj+Msk8opjXklGXoOpyWEe7d75gTDU7duA6OCoyUEI+66yJxQYIAL2iBhsKQPBXZHohXfOoaLbFEuF8gT6Z+dR26Sqhja5TRf8HucpU+2RxOkjs+Spn5m0Qr5JCnHMl+17OvQkJocuXvrrDHVi9dl68f9l+928fhza+for/R/6b//fLb7xfJYO+bdDm8QogD+uyhvz8+vP/l9/5ff6zv3n96Mm4u579e8C7GFnkbvl6Xc+x6sHjJK9N9uo7Rk+t7KIDW9IEE9J7fgVWYIs9dBnC9gOnhEAhbHFIXRHDJb1CyBupi5XrOLdqTDXuJiKLFY9qarkjofodhkQe3TCDA7ZBybbKGBY571hPIBlBDHAHPXboy5oF0iyLKeRbE89A6cufxhBmLj8KlG0wJpcRPByKbwMEObx1EHTdoSB4PysP6a8qDy42tBt7ltJHL5wYTH9NwDyzpXS4Ovtds3nzK9Nbuc9oqp7ODVEMR3yvLw8iHh32GvYWCJROskW3uwuPMvvw8c6h4Hsij8DjkgdgDRPGULWKU10K4yL1oRop1s4GempKe9iybdQIBgCRI5FKXBLNdLByYnm0a8aWCZ1/FA3+jmYNnWxdrss18VPHUrUtxFGHGiyhFf28qhg0JRWyGtaOVMzh4iWhUfh8Frq+6Gz307Ev4+RBQpii9K6t3GTObOtzJuFYV6/06hLkzQnKhYqVOwgv7zQ2WMSWcwc6hm1DdgY/9hbPAwZJjFswXu5UzVR5+oKWGKlqjBczgNua57meUz3wPMBKBvg9ebCRWruPgIDYiIEGU2Bk2z0RR2AQGU/iBrXRl/GfQG8CErqBtZm34YewhvSIBvDZyY8OCwYg9YWbIFCan0p7Xm5x9cS/X2RjL6JfbmMJub7q1+4qtLQjPc+NzZ0X97HgQbXKNZH2QERsuFeUXJunrC1MSty2L21aI1kNz7N1xmwK0MOEVRP5qUtU9OsYtCXWgECq8rcHRxZvEHO3YPkht0z7fWG/zLUQfZ9HayZP8rU9FmuMv3xasRP6J8p1/ym9RN2RUI566YcRXl+lzBF4fLIGSeUtgiUTuOWBf+EPWOESUhKyPff3mALoYDI7YM5C/jvsY6G1G5QMnY2gN/NGNIvdlAy8xne3eyMyqtWC8+xxvfI5UsydHVrM+6UnZrJd8Fuv336wdwDczABFc1KUC5pywUYEzN2oV83qrwetg5BTZlOJaMyMxK0CUN7ntUfcUtlD8GJVknvSNf0uHtWKY5KhXjyLiglz37uDWNPFjzZN7bLVk5IdlzuPsNxL6SN+JNDon8nhO5KDo1Q3GA0lPDo5mXk9ss0JPyr1IU/Ai7fHpepEjSWEvDuBhsQJ5Yh+EMVtiDwseR8YX35wl3KVMC7DMIPtgBkBC5ilximbZFMr7SM5OZa/8q0U/sXUdam+icrdIuWkmbXlFk84rOrpQTUs2TUqptuUVmXK4teCkpOdmhbOSYxlNe6NrtTuicq9qcGvm8pRhYDdYhLGdyducOjjMgKDAXXQjKpBg2r9gcht4ItzuafZwsPB6tVAfQEI6O02vQH/dDn4ctMCP436w2OnMrHkeE/bbswIycFZaAXPclnFPkVaVdceBc8nSX9Cae4Rh1SmQOJiNFQWa7132YB20WYSm2FnidKGxNydP7zLCNCbAjVRvGmPViGzCBa6XGWWbQcMpYrOtlKwKaobYQ9TdFrOAFdD2jqRGk8c7i7DWShOh6RDJS/Je+bRb04GSVZAGOlrmxC710v4k/tztnLTXcNLsUb2XZk9UXlNKbOalHSIDVV7a6DS8NFOVEchyWAvirynehCy49T3WYCnh1R2L2bZ/USZIqYFHOBXnmw/Rt/Dd7X3kfNx9DB++jj6ZF6pDMRM761qakA3JHM1djznRoBWS061UH59stpnbfMYqUxZa1NaiUpUZyEZEqTKDCpv1MiClyjN1bvILLYFpaMrVPIJclaZAVe6R95MT5NJiFlEwH4pnK3n+KWWaqNjrfe7nevPM/XUdTc9XyBnexO72Z7JHL0scHj/HeYTk5pnZ+dZMu2nq2oD2jLucX5Lkd85ecmq4T9pNFksWR890k21hIGskzKVtN1nODd2F5C/wpNwuj/kqLnJ/KKiWIng/OJ6HPBDypiddDTuudJWOVQ774nLTqopWOaG5Puw3narPQ/I063aOjpzuaT7S3l4VGU7VdjJbK/y05Mhk57y9WK6mrp1sK8mZxock5y07T2sdN7A8+SaIQMdDyz1A7Z3VMeRKOSs9q+eWQ9bxwns24IZlaMCdq8bTSrzyjKXU7SwTjy3uRkWyUWlm+8OX70dlLMWW46rFKEVXraeNcmsc7XLgW54IsgTYaQxl+923lQfzOWWC1KrbIYQajavY8U2QX4mCtWWRyhCCYJfuN2scvmaQt2IG+r11AsUF1rM8W1vQY1tTj4dtJSxtjezTSQUoYbnD/R+sM8iON7/xkePG9S4dOW7teaunii8+L9KpzvzyhayNdJYFrVuIbA6kg9kUxtANbY6EyNJkLBjWktAm6A3a59j4niyfsfgcy6icV2N+odJ/wsvYsi2UzPi4EECOyx7SPh1c/fFwVahbOqSE8v6NoTDCZxWUVWtqV7L/rEN+1BSsKvXrCNEs5fRShZOwKrdCtfBUFbsS0WA6VhrJOVi4LKHtKz4SkHZ722FGXXVKXY86dRq0FY3pq0pbThoz7lyag4zQ+paOBNcZYGSNFC+eKs5MwUQ9zizRohZwpmkIZ1xfLKjQxZmmMRZGEr8X6Hg5dLVuy5HGYi1RB9h+OGAbTDQAm6WK/thnj9j6coFR/FHb9LsNtvB67BNYQ4/pU5JYWSbHk8Erz2eUbBarc/5s7XMO4X7jAKRSBVurNO93ceUWxKqoBleKtTWoXhZWzh9CZcW0IrYu9JHvx98nA+YBb0LVZ1o1LIgwYMA+jcACwnC0uBH7bpuf4yOf7WmjIvGq0saR1ZY6ypGrDun/KKSfQtGTQvpiseyhwrEx0jeFMFxfzNW1jPQtOfPR1RScDOYXa6knipO5r/qqqJ+gpMBSlc520K/usE02fKOSArWCtXTYWqrguyIln357ymsWFVTNoUl/rcKCInMHHvX0WVVaoNLn1koL+hrJpB8GHkECK7IkAfIKCJLDRTMPFg/Q8d8FF9O0wEkVIAinuCmdzrpwcSh8BYlpiLG9I1UgjIbilPlxW1oaIXSoLUEYDqr4m5YgQDP79w0Je/ZfMOx3/wc=&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><clipPath id="mx-clip-4-31-332-204-0"><rect x="4" y="31" width="332" height="204"/></clipPath><clipPath id="mx-clip-4-243-332-282-0"><rect x="4" y="243" width="332" height="282"/></clipPath><clipPath id="mx-clip-44-586-202-94-0"><rect x="44" y="586" width="202" height="94"/></clipPath><clipPath id="mx-clip-44-688-202-184-0"><rect x="44" y="688" width="202" height="184"/></clipPath><clipPath id="mx-clip-364-586-382-24-0"><rect x="364" y="586" width="382" height="24"/></clipPath><clipPath id="mx-clip-364-610-382-50-0"><rect x="364" y="610" width="382" height="50"/></clipPath><clipPath id="mx-clip-364-670-382-150-0"><rect x="364" y="670" width="382" height="150"/></clipPath><clipPath id="mx-clip-454-31-242-104-0"><rect x="454" y="31" width="242" height="104"/></clipPath><clipPath id="mx-clip-454-143-242-146-0"><rect x="454" y="143" width="242" height="146"/></clipPath><clipPath id="mx-clip-314-1071-422-64-0"><rect x="314" y="1071" width="422" height="64"/></clipPath><clipPath id="mx-clip-364-399-192-56-0"><rect x="364" y="399" width="192" height="56"/></clipPath><clipPath id="mx-clip-584-391-212-24-0"><rect x="584" y="391" width="212" height="24"/></clipPath><clipPath id="mx-clip-584-423-212-72-0"><rect x="584" y="423" width="212" height="72"/></clipPath><clipPath id="mx-clip-304-961-432-64-0"><rect x="304" y="961" width="432" height="64"/></clipPath></defs><g><path d="M 0 26 L 0 0 L 340 0 L 340 26" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 0 26 L 0 520 L 340 520 L 340 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 26 L 340 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-style="italic" pointer-events="none" text-anchor="middle" font-size="12px"><text x="169.5" y="17.5">Abeille</text></g><g fill="#000000" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-31-332-204-0)" font-size="12px"><text x="5.5" y="43.5"># int position_x;</text><text x="5.5" y="57.5"># int position_y;</text><text x="5.5" y="71.5"># int points_de_vie;</text><text x="5.5" y="85.5"># int points_de_vie_max;</text><text x="5.5" y="99.5"># int vitesse_de_attaque;</text><text x="5.5" y="113.5"># int rotation;</text><text x="5.5" y="127.5"># int vitesse;</text><text x="5.5" y="141.5"># int degats;</text><text x="5.5" y="155.5"># int anim;</text><text x="5.5" y="169.5"># sf::IntRect anim1;</text><text x="5.5" y="183.5"># sf::IntRect anim2;</text><text x="5.5" y="197.5"># sf::Sprite sprite;</text><text x="5.5" y="211.5"># std::string str_texture;</text><text x="5.5" y="225.5"># sf::Texture texture;</text></g><path d="M 0 234 L 340 234" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-243-332-282-0)" font-size="12px"><text x="5.5" y="255.5">+ Abeille(int x, int y, int pv, int atk_spd, int mvmt_spd, int dmg)</text><text x="5.5" y="269.5">+ Abeille()</text><text x="5.5" y="283.5">+ ~Abeille()</text><text x="5.5" y="297.5">+ tir() = 0 : int</text><text x="5.5" y="311.5">+ move() = 0 : void</text><text x="5.5" y="325.5">+ bool operator==(Abeille const&amp; a) const : bool</text><text x="5.5" y="339.5">+ bool operator==(Missile const&amp; a) const : bool</text><text x="5.5" y="353.5">+ get_x() const : int</text><text x="5.5" y="367.5">+ get_y() const : int</text><text x="5.5" y="381.5">+ get_degats() const : int</text><text x="5.5" y="395.5">+ get_rotation() const : int</text><text x="5.5" y="409.5">+ get_vitesse_de_attaque() const : int</text><text x="5.5" y="423.5">+ update_pos() : void</text><text x="5.5" y="437.5">+ update_tex() : void</text><text x="5.5" y="451.5">+ update_pv() : void</text><text x="5.5" y="465.5">+ dead() : bool</text><text x="5.5" y="479.5">+ perte_points_de_vie(int dmg) : void</text><text x="5.5" y="493.5">+ get_texture() const :  std::string</text><text x="5.5" y="507.5">+ get_sprite() const : sf::Sprite</text></g><path d="M 40 581 L 40 555 L 250 555 L 250 581" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 40 581 L 40 867 L 250 867 L 250 581" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 40 581 L 250 581" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="144.5" y="572.5">Abeille_Normale</text></g><g fill="#000000" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-44-586-202-94-0)" font-size="12px"><text x="45.5" y="598.5">- int chargement_gelee;</text><text x="45.5" y="612.5">- int gelee_chargee;</text><text x="45.5" y="626.5">- int cooldown_tir;</text><text x="45.5" y="640.5">- sf::Sprite sprite_chargement;</text><text x="45.5" y="654.5">- sf::Texture texture_chargement;</text><text x="45.5" y="668.5">- int charges;</text></g><path d="M 40 679 L 250 679" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-44-688-202-184-0)" font-size="12px"><text x="45.5" y="700.5">+ Abeille_Normale()</text><text x="45.5" y="714.5">+ ~Abeille_Normale(){}</text><text x="45.5" y="728.5">+ move(int x, int y) : void</text><text x="45.5" y="742.5">+ tir() : int</text><text x="45.5" y="756.5">+ incremente_chargement() : void</text><text x="45.5" y="770.5">+ get_chargement() const : sf::Sprite</text><text x="45.5" y="784.5">+ get_gelee_chargee() const : int</text><text x="45.5" y="798.5">+ get_charges() const : int</text><text x="45.5" y="812.5">+ decremente_charges() : void</text><text x="45.5" y="826.5">+ reset_gelee() : void</text><text x="45.5" y="840.5">+ update_chargement() : void</text><text x="45.5" y="854.5">+ operator+=(int a) : void</text></g><path d="M 145 555 L 145 537 L 170 537 L 170 532.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 170 521.12 L 175.5 532.12 L 164.5 532.12 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 581 L 360 555 L 750 555 L 750 581" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 581 L 360 845 L 750 845 L 750 581" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 581 L 750 581" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="554.5" y="572.5">Abeille_Zombie</text></g><g fill="#000000" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-364-586-382-24-0)" font-size="12px"><text x="365.5" y="598.5"># int compteur_de_zombies;</text></g><g fill="#000000" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-364-610-382-50-0)" font-size="12px"><text x="365.5" y="622.5"># int id;</text><text x="365.5" y="636.5"># int probabilite_de_tir;</text><text x="365.5" y="650.5"># int compteur_mouvement;</text></g><path d="M 360 660 L 750 660" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-364-670-382-150-0)" font-size="12px"><text x="365.5" y="682.5">+ Abeille_Zombie(int x, int y, int pv, int atk_spd, int mvmt_spd, int dmg);</text><text x="365.5" y="696.5">+ Abeille_Zombie();</text><text x="365.5" y="710.5">+ ~Abeille_Zombie();	</text><text x="365.5" y="724.5">+ tir() : int</text><text x="365.5" y="738.5">+ move(int x, int y) : void</text><text x="365.5" y="752.5">+ get_id() const : int</text><text x="365.5" y="766.5">+ operator==(Gelee_Royale const&amp; a) const : bool</text><text x="365.5" y="780.5">+ operator==(Abeille const&amp; a) const : bool</text><text x="365.5" y="794.5">+ operator==(Missile const&amp; a) const : bool</text></g><path d="M 555 555 L 555 537 L 170 537 L 170 532.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 170 521.12 L 175.5 532.12 L 164.5 532.12 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 450 26 L 450 0 L 700 0 L 700 26" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 450 26 L 450 290 L 700 290 L 700 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 450 26 L 700 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="574.5" y="17.5">Projectile</text></g><g fill="#000000" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-454-31-242-104-0)" font-size="12px"><text x="455.5" y="43.5"># int position_x;</text><text x="455.5" y="57.5"># int position_y;</text><text x="455.5" y="71.5"># int vitesse;</text><text x="455.5" y="85.5"># int degats;</text><text x="455.5" y="99.5"># int rotation;</text><text x="455.5" y="113.5"># sf::Texture projectile_texture;</text><text x="455.5" y="127.5"># sf::Sprite projectile;</text></g><path d="M 450 134 L 700 134" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-454-143-242-146-0)" font-size="12px"><text x="455.5" y="155.5">+ Projectile(int x, int y, int vit, int rot, int dmg);</text><text x="455.5" y="169.5">+ Projectile();</text><text x="455.5" y="183.5">+ ~Projectile();</text><text x="455.5" y="197.5">+ move() : void</text><text x="455.5" y="211.5">+ get_x() const : int</text><text x="455.5" y="225.5">+ get_y() const : int</text><text x="455.5" y="239.5">+ get_rot() const : int</text><text x="455.5" y="253.5">+ get_dmg() const : int</text><text x="455.5" y="267.5">+ get_sprite() : sf::Sprite</text><text x="455.5" y="281.5">+ update_sprite() : void</text></g><path d="M 310 1056 L 310 1030 L 740 1030 L 740 1056" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 1056 L 310 1130 L 740 1130 L 740 1056" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 1056 L 740 1056" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="524.5" y="1047.5">Abeille_Zombie_Normale</text></g><path d="M 310 1061 L 740 1061" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-314-1071-422-64-0)" font-size="12px"><text x="315.5" y="1083.5">+ Abeille_Zombie_Super(int x, int y, int pv, int atk_spd, int mvmt_spd, int dmg);</text><text x="315.5" y="1097.5">+ Abeille_Zombie_Super(int x, int y);</text><text x="315.5" y="1111.5">+ Abeille_Zombie_Super();</text><text x="315.5" y="1125.5">+ ~Abeille_Zombie_Super();</text></g><path d="M 540 920 L 540 890 L 555 890 L 555 857.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 555 846.12 L 560.5 857.12 L 549.5 857.12 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 386 L 360 360 L 560 360 L 560 386" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 386 L 360 450 L 560 450 L 560 386" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 386 L 560 386" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="459.5" y="377.5">Missile</text></g><path d="M 360 390 L 560 390" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-364-399-192-56-0)" font-size="12px"><text x="365.5" y="411.5">+ Missile(int x, int y, int rot, int dmg)</text><text x="365.5" y="425.5">+ Missile(const Missile&amp; m)</text><text x="365.5" y="439.5">+ ~Missile()</text></g><path d="M 460 360 L 460 325.33 L 575 325.33 L 575 302.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 575 291.12 L 580.5 302.12 L 569.5 302.12 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 580 386 L 580 360 L 800 360 L 800 386" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 580 386 L 580 490 L 800 490 L 800 386" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 580 386 L 800 386" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="689.5" y="377.5">Gelee_Royale</text></g><g fill="#000000" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-584-391-212-24-0)" font-size="12px"><text x="585.5" y="403.5">- std::vector&lt;int&gt; zombies_touches;</text></g><path d="M 580 414 L 800 414" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-584-423-212-72-0)" font-size="12px"><text x="585.5" y="435.5">+ Gelee_Royale(int x, int y)</text><text x="585.5" y="449.5">+ ~Gelee_Royale()</text><text x="585.5" y="463.5">+ get_vecteur() const : std::vector&lt;int&gt;</text><text x="585.5" y="477.5">+ nouvelle_colision(int a) : void</text></g><path d="M 690 360 L 690 325.33 L 575 325.33 L 575 302.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 575 291.12 L 580.5 302.12 L 569.5 302.12 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 946 L 300 920 L 740 920 L 740 946" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 946 L 300 1020 L 740 1020 L 740 946" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 946 L 740 946" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="519.5" y="937.5">Abeille_Zombie_Normale</text></g><path d="M 300 951 L 740 951" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-961-432-64-0)" font-size="12px"><text x="305.5" y="973.5">+ Abeille_Zombie_Normale(int x, int y, int pv, int atk_spd, int mvmt_spd, int dmg);</text><text x="305.5" y="987.5">+ Abeille_Zombie_Normale(int x, int y);</text><text x="305.5" y="1001.5">+ Abeille_Zombie_Normale();</text><text x="305.5" y="1015.5">+ ~Abeille_Zombie_Normale();</text></g><path d="M 740 1098 L 750 1098 L 750 890 L 555 890 L 555 857.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 555 846.12 L 560.5 857.12 L 549.5 857.12 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/></g></svg>